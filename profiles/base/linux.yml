schema_version: "1.1"
profile_name: "Базовый профиль Linux"
description: "Минимальный набор проверок для типовых GNU/Linux систем перед сертификацией ФСТЭК."

extends:
  - "../include/linux_hardening.yml"
  - "../include/containers_runtime.yml"

meta:
  fstec: "https://fstec.ru/dokumenty/vse-dokumenty/prikazy/prikaz-fstek-rossii-ot-18-fevralya-2013-g-n-21"
  goskz: "https://docs.cntd.ru/document/1200138605"
  cis: "https://www.cisecurity.org/benchmark/linux"

checks:
  # ─────────────── Системная политика аутентификации ───────────────
  - id: base_shadow_no_empty_passwords
    name: "/etc/shadow: отсутствуют пустые пароли"
    module: "system"
    command: |
      awk -F: '($2=="" || $2=="!!"){print $1}' /etc/shadow 2>/dev/null
    expect: ""
    assert_type: "exact"
    severity: "high"
    tags:
      fstec: ["ИАФ.2"]
      cis: "5.4.1"
      goskz: "5.3.1"

  - id: base_pam_nullok_disabled
    name: "PAM: опция nullok отключена"
    module: "system"
    command: "grep -R --color=never -E '^[[:space:]]*auth[[:space:]]+[^#]*pam_unix\\.so.*nullok' /etc/pam.d 2>/dev/null || true"
    expect: ""
    assert_type: "exact"
    severity: "high"
    tags:
      fstec: ["ИАФ.2"]
      cis: "5.4.1"
      goskz: "5.3.1"

  - id: base_system_accounts_shells
    name: "Системные аккаунты заблокированы (nologin/false)"
    module: "system"
    command: |
      awk -F: '($3<1000 && $1!="root" && $7!="/usr/sbin/nologin" && $7!="/bin/false"){print $1":"$7}' /etc/passwd 2>/dev/null
    expect: ""
    assert_type: "exact"
    severity: "high"
    tags:
      fstec: ["ИАФ.4"]
      cis: "5.4.2"
      goskz: "5.3.2"

  - id: base_sudo_no_nopasswd
    name: "sudo: отсутствуют правила с NOPASSWD"
    module: "system"
    command: "grep -R --color=never -h 'NOPASSWD' /etc/sudoers /etc/sudoers.d 2>/dev/null | grep -v '^#' || true"
    expect: "profiles/include/allowlist_sudo_nopasswd.txt"
    assert_type: "set_allowlist"
    severity: "medium"
    tags:
      fstec: ["ИАФ.5"]
      cis: "5.3.4"
      goskz: "5.3.6"

  - id: base_su_pam_wheel
    name: "su: доступ только членам wheel"
    module: "system"
    command: "grep -RhsE '^[[:space:]]*auth[[:space:]]+required[[:space:]]+pam_wheel\\.so.*use_uid' /etc/pam.d/su 2>/dev/null"
    expect: "pam_wheel.so"
    assert_type: "contains"
    severity: "high"
    tags:
      fstec: ["ИАФ.5"]
      cis: "5.3.8"
      goskz: "5.3.6"

  - id: base_sudo_requiretty_logging
    name: "sudo: requiretty и аудит попыток"
    module: "system"
    command: |
      systemd-analyze cat-config sudo/sudoers 2>/dev/null \
        | sed -E 's/#.*$//' \
        | awk '{$1=$1};1' \
        | grep -E '^(Defaults\s+requiretty|Defaults\s+log_output|Defaults\s+mail_badpass)' \
        | awk '{print $1" "$2}' \
        | sort -u
    expect: |-
      Defaults log_output
      Defaults mail_badpass
      Defaults requiretty
    assert_type: "exact"
    severity: "medium"
    tags:
      fstec: ["ИАФ.5"]
      cis: "5.3.3"
      goskz: "5.3.6"

  - id: base_sudo_logfile_configured
    name: "sudo: включён журнал команд (Defaults logfile)"
    module: "system"
    command: |
      systemd-analyze cat-config sudo/sudoers 2>/dev/null \
        | sed -E 's/#.*$//' \
        | awk '{$1=$1};1' \
        | grep -E '^Defaults\s+logfile='
    expect: "Defaults logfile="
    assert_type: "contains"
    severity: "medium"
    tags:
      fstec: ["ИАФ.5"]
      cis: "5.3.3"
      goskz: "5.3.6"

  # ─────────────── Системная политика аутентификации ───────────────
  - id: base_pam_faillock
    name: "PAM: faillock активирован и блокирует после 5 попыток"
    module: "system"
    command: "grep -RhsE 'deny=([1-9][0-9]*)' /etc/security/faillock.conf /etc/pam.d 2>/dev/null | head -n1"
    expect: "deny={{ FAILLOCK_DENY }}"
    assert_type: "contains"
    severity: "high"
    tags:
      fstec: ["ИАФ.1", "ИАФ.4"]
      cis: "5.4.2"
      goskz: "5.3.2"

  - id: base_pam_password_quality
    name: "PAM: pam_pwquality требует сложные пароли"
    module: "system"
    command: |
      systemd-analyze cat-config pwquality.conf 2>/dev/null \
        | sed -E 's/#.*$//' \
        | awk '{$1=$1};1' \
        | grep -iE '^(minlen|maxrepeat|dcredit|ucredit|lcredit|ocredit|difok|enforce_for_root)' \
        | awk -F= '{print tolower($1)}' \
        | sort -u
    expect: |-
      dcredit
      difok
      enforce_for_root
      lcredit
      maxrepeat
      minlen
      ocredit
      ucredit
    assert_type: "exact"
    severity: "medium"
    tags:
      fstec: ["ИАФ.6"]
      cis: "5.4.1"
      goskz: "5.3.3"

  - id: base_pam_pwquality_thresholds
    name: "pam_pwquality: длина ≥12 и разнообразие символов"
    module: "system"
    command: |
      systemd-analyze cat-config pwquality.conf 2>/dev/null \
        | sed -E 's/#.*$//' \
        | awk '{$1=$1};1'
    expect: "minlen\\s*=\\s*{{ PWQUALITY_MINLEN_PATTERN }}"
    assert_type: "regexp"
    severity: "high"
    tags:
      fstec: ["ИАФ.6"]
      cis: "5.4.1"
      goskz: "5.3.3"

  - id: base_pam_pwquality_difok
    name: "pam_pwquality: difok ≥ 4"
    module: "system"
    command: |
      systemd-analyze cat-config pwquality.conf 2>/dev/null \
        | sed -E 's/#.*$//' \
        | awk '{$1=$1};1'
    expect: "difok\\s*=\\s*{{ PWQUALITY_DIFOK_PATTERN }}"
    assert_type: "regexp"
    severity: "medium"
    tags:
      fstec: ["ИАФ.6"]
      cis: "5.4.1"
      goskz: "5.3.3"

  - id: base_pam_pwquality_credits
    name: "pam_pwquality: требования к классам символов"
    module: "system"
    command: |
      systemd-analyze cat-config pwquality.conf 2>/dev/null \
        | sed -E 's/#.*$//' \
        | awk '{$1=$1};1'
    expect: '(?s)(?=.*dcredit\s*=\s*-([1-9][0-9]*|1))(?=.*ucredit\s*=\s*-([1-9][0-9]*|1))(?=.*lcredit\s*=\s*-([1-9][0-9]*|1))(?=.*ocredit\s*=\s*-([1-9][0-9]*|1))'
    assert_type: "regexp"
    severity: "medium"
    tags:
      fstec: ["ИАФ.6"]
      cis: "5.4.1"
      goskz: "5.3.3"

  - id: base_pam_pwquality_retry
    name: "pam_pwquality: ограничение количества попыток ввода"
    module: "system"
    command: |
      systemd-analyze cat-config systemd/pam.d/system-auth 2>/dev/null \
        | sed -E 's/#.*$//' \
        | awk '{$1=$1};1' \
        | grep -i 'pam_pwquality.so'
    expect: "retry=(1|2|3)"
    assert_type: "regexp"
    severity: "medium"
    tags:
      fstec: ["ИАФ.6"]
      cis: "5.4.1"
      goskz: "5.3.3"

  - id: base_pam_unix_remember
    name: "pam_unix: история паролей remember ≥5"
    module: "system"
    command: |
      systemd-analyze cat-config systemd/pam.d/system-auth 2>/dev/null \
        | sed -E 's/#.*$//' \
        | awk '{$1=$1};1' \
        | grep -i 'pam_unix.so'
    expect: "remember=([5-9]|[1-9][0-9])"
    assert_type: "regexp"
    severity: "medium"
    tags:
      fstec: ["ИАФ.6"]
      cis: "5.4.1"
      goskz: "5.3.3"

  - id: base_login_defs
    name: "Политика смены пароля: PASS_MAX_DAYS ≤ 90"
    module: "system"
    command: "awk '$1==\"PASS_MAX_DAYS\"{print $2}' /etc/login.defs 2>/dev/null"
    expect: "^([1-8]?[0-9]|90)$"
    assert_type: "regexp"
    severity: "medium"
    tags:
      fstec: ["ИАФ.7"]
      cis: "5.6.1"
      goskz: "5.3.5"

  # ─────────────── Контроль целостности и аудит ───────────────
  - id: base_auditd_service
    name: "auditd включён и активен"
    module: "integrity"
    command: "systemctl is-active auditd 2>/dev/null || true"
    expect: "active"
    assert_type: "exact"
    severity: "high"
    tags:
      fstec: ["ЗИС.6"]
      cis: "8.2"
      goskz: "7.4.1"

  - id: base_audit_rules
    name: "auditd: контроль попыток изменения /etc/passwd"
    module: "integrity"
    command: "auditctl -l 2>/dev/null | grep -E -- '-w /etc/passwd -p wa' || true"
    expect: "-w /etc/passwd -p wa"
    assert_type: "contains"
    severity: "high"
    tags:
      fstec: ["ЗИС.6", "УПД.5"]
      cis: "4.1.3"
      goskz: "7.4.3"

  - id: base_audit_shadow_rule
    name: "auditd: контроль /etc/shadow"
    module: "integrity"
    command: "auditctl -l 2>/dev/null | grep -E -- '-w /etc/shadow -p wa' || true"
    expect: "-w /etc/shadow -p wa"
    assert_type: "contains"
    severity: "high"
    tags:
      fstec: ["ЗИС.6"]
      cis: "4.1.4"
      goskz: "7.4.3"

  - id: base_audit_gshadow_rule
    name: "auditd: контроль /etc/gshadow"
    module: "integrity"
    command: "auditctl -l 2>/dev/null | grep -E -- '-w /etc/gshadow -p wa' || true"
    expect: "-w /etc/gshadow -p wa"
    assert_type: "contains"
    severity: "medium"
    tags:
      fstec: ["ЗИС.6"]
      cis: "4.1.4"
      goskz: "7.4.3"

  - id: base_audit_module_load
    name: "auditd: загрузка/удаление модулей ядра логируется"
    module: "integrity"
    command: |
      auditctl -l 2>/dev/null | grep -E -- '-a always,exit -F arch=b(32|64) -S (init_module|finit_module|delete_module)' || true
    expect: "init_module"
    assert_type: "contains"
    severity: "medium"
    tags:
      fstec: ["ЗИС.6"]
      cis: "4.1.4"
      goskz: "7.4.3"

  - id: base_audit_time_change
    name: "auditd: попытки изменения системного времени"
    module: "integrity"
    command: |
      auditctl -l 2>/dev/null | grep -E -- '-a always,exit -F arch=b(32|64) -S (adjtimex|settimeofday|clock_settime)' || true
    expect: "adjtimex"
    assert_type: "contains"
    severity: "medium"
    tags:
      fstec: ["АНЗ.1"]
      cis: "4.1.1"
      goskz: "7.4.2"

  - id: base_audit_bootloader
    name: "auditd: контроль загрузчика (/boot, EFI)"
    module: "integrity"
    command: |
      auditctl -l 2>/dev/null \
        | grep -E -- '(-w /boot/(grub2/)?grub.cfg -p wa -k (boot|grub)|-w /boot/(grub2/)?grubenv -p wa -k (boot|grub)|-w /(boot|efi) -p wa -k (boot|efi))' || true
    expect: '(?s)(?=.*grub.cfg)(?=.*grubenv)(?=.*-w /(boot|efi) -p wa -k (boot|efi))'
    assert_type: "regexp"
    severity: "high"
    tags:
      fstec: ["ЗИС.6"]
      cis: "4.1.3"
      goskz: "7.4.3"

  - id: base_audit_privileged_commands
    name: "auditd: контроль sudo/su/passwd"
    module: "integrity"
    command: |
      auditctl -l 2>/dev/null \
        | grep -E -- '(-w /usr/bin/sudo -p xwa -k (privileged|sudo)|-w /bin/su -p xwa -k (privileged|su)|-w /usr/bin/passwd -p xwa -k (privileged|passwd))' || true
    expect: '(?s)(?=.*sudo)(?=.*su)(?=.*passwd)'
    assert_type: "regexp"
    severity: "high"
    tags:
      fstec: ["ЗИС.6"]
      cis: "4.1.5"
      goskz: "7.4.3"

  - id: base_auditd_conf_actions
    name: "auditd.conf: реакции на переполнение журнала"
    module: "integrity"
    command: |
      systemd-analyze cat-config audit/auditd.conf 2>/dev/null \
        | sed -E 's/#.*$//' \
        | awk 'NF{key=tolower($1); if(key=="space_left_action" || key=="action_mail_acct" || key=="admin_space_left_action" || key=="max_log_file_action"){sub(/^[^=]*=/,"",$0); gsub(/^[[:space:]]+/,"",$0); print key " = " tolower($0)}}' \
        | sort -u
    expect: |-
      action_mail_acct = root
      admin_space_left_action = halt
      max_log_file_action = keep_logs
      space_left_action = email
    assert_type: "contains"
    severity: "medium"
    tags:
      fstec: ["АНЗ.5", "ЗИС.6"]
      cis: "4.1.2"
      goskz: "7.4.3"

  - id: base_auditd_conf_log_size
    name: "auditd.conf: ограничение размера журнала ≥ 64 МБ"
    module: "integrity"
    command: |
      systemd-analyze cat-config audit/auditd.conf 2>/dev/null \
        | sed -E 's/#.*$//' \
        | awk 'tolower($1)=="max_log_file"{print tolower($0)}'
    expect: "max_log_file = (6[4-9]|[7-9][0-9]|[1-9][0-9]{2,})"
    assert_type: "regexp"
    severity: "medium"
    tags:
      fstec: ["АНЗ.5", "ЗИС.6"]
      cis: "4.1.2"
      goskz: "7.4.3"

  - id: base_aide_db
    name: "AIDE инициализирован (наличие БД)"
    module: "integrity"
    command: "test -f /var/lib/aide/aide.db.gz"
    expect: 0
    assert_type: "exit_code"
    severity: "medium"
    tags:
      fstec: ["ЗИС.5"]
      cis: "5.3.1"
      goskz: "7.3.2"

  # ─────────────── Время и синхронизация ───────────────
  - id: base_ntp_service_active
    name: "Служба синхронизации времени активна (chronyd/ntpd)"
    module: "system"
    command: |
      if systemctl is-active --quiet chronyd 2>/dev/null; then
        echo chronyd
      elif systemctl is-active --quiet ntpd 2>/dev/null; then
        echo ntpd
      else
        echo none
      fi
    expect: "^(chronyd|ntpd)$"
    assert_type: "regexp"
    severity: "medium"
    tags:
      fstec: ["АНЗ.1"]
      cis: "2.2.1"
      goskz: "7.5.1"

  - id: base_ntp_synchronized
    name: "Система синхронизирована по NTP"
    module: "system"
    command: "timedatectl show -p NTPSynchronized --value 2>/dev/null || echo no"
    expect: "^yes$"
    assert_type: "regexp"
    severity: "medium"
    tags:
      fstec: ["АНЗ.1"]
      cis: "2.2.1"
      goskz: "7.5.1"

  - id: base_ntp_sources_reliable
    name: "NTP: есть активные надёжные источники"
    module: "system"
    command: |
      if systemctl is-active --quiet chronyd 2>/dev/null; then
        chronyc sources -v 2>/dev/null \
          | awk '/^[\^\*\+#]/ {total++; if($1 ~ /^\^/ && substr($1,2,1) == "*"){primary++}} END {if(total==0){print "primary=0 total=0"} else {printf "primary=%d total=%d\n", primary, total}}'
      elif systemctl is-active --quiet ntpd 2>/dev/null; then
        ntpq -np 2>/dev/null \
          | awk '/^[\*\+]/ {total++; if($1 ~ /^\*/){primary++}} END {if(total==0){print "primary=0 total=0"} else {printf "primary=%d total=%d\n", primary, total}}'
      else
        echo skipped
      fi
    expect: '^(skipped|primary=[1-9][0-9]* total=[2-9][0-9]*)$'
    assert_type: "regexp"
    severity: "medium"
    tags:
      fstec: ["АНЗ.1"]
      cis: "2.2.1"
      goskz: "7.5.1"

  - id: base_ntp_makestep
    name: "chrony: makestep настроен для больших сдвигов"
    module: "system"
    command: |
      if [ -f /etc/chrony.conf ]; then
        sed -E 's/#.*$//' /etc/chrony.conf | awk '{$1=$1};1' | grep -i '^makestep'
      else
        echo skipped
      fi
    expect: '^(skipped|(?i:makestep\s+[0-9]+(\.[0-9]+)?\s+[1-9][0-9]*))$'
    assert_type: "regexp"
    severity: "low"
    tags:
      fstec: ["АНЗ.1"]
      cis: "2.2.1"
      goskz: "7.5.1"

  - id: base_ntp_minsources
    name: "chrony: заданы минимальные источники (minsources)"
    module: "system"
    command: |
      if systemctl is-active --quiet chronyd 2>/dev/null && [ -f /etc/chrony.conf ]; then
        sed -E 's/#.*$//' /etc/chrony.conf | awk '{$1=$1};1' | grep -i '^minsources'
      else
        echo skipped
      fi
    expect: '^(minsources\s+([2-9]|[1-9][0-9])|skipped)$'
    assert_type: "regexp"
    severity: "low"
    tags:
      fstec: ["АНЗ.1"]
      cis: "2.2.1"
      goskz: "7.5.1"

  # ─────────────── Сетевые политики ───────────────
  - id: base_firewall_default_deny
    name: "Брандмауэр: политика DROP по умолчанию"
    module: "network"
    command: |
      if command -v nft >/dev/null 2>&1; then
        nft list ruleset | grep -E 'hook (input|forward|output).*policy drop' | sort -u | wc -l
      elif command -v iptables >/dev/null 2>&1; then
        iptables -S | grep -E '^-P (INPUT|FORWARD|OUTPUT) DROP' | wc -l
      else
        echo 0
      fi
    expect: "^([3-9]|[1-9][0-9]+)$"
    assert_type: "regexp"
    severity: "high"
    tags:
      fstec: ["ЗИС.17"]
      cis: "3.6"
      goskz: "6.2.1"

  - id: base_firewall_service
    name: "firewalld/nftables запущен"
    module: "network"
    command: |
      if systemctl is-active --quiet firewalld 2>/dev/null; then
        echo firewalld
      elif systemctl is-active --quiet nftables 2>/dev/null; then
        echo nftables
      else
        echo none
      fi
    expect: "^(firewalld|nftables)$"
    assert_type: "regexp"
    severity: "medium"
    tags:
      fstec: ["ЗИС.17"]
      cis: "3.6.2"
      goskz: "6.2.3"

  - id: base_sshd_banner
    name: "SSH баннер предупреждения задан"
    module: "network"
    command: "sshd -T 2>/dev/null | grep -i '^banner' | awk '{print $2}'"
    expect: '^/etc/issue(\.net)?$'
    assert_type: "regexp"
    severity: "low"
    tags:
      fstec: ["УПД.2"]
      cis: "5.2.18"
      goskz: "6.1.4"

  - id: base_sshd_rootlogin_disabled
    name: "SSHD: root-вход запрещён"
    module: "network"
    command: "sshd -T 2>/dev/null | grep -i '^permitrootlogin ' | awk '{print tolower($2)}'"
    expect: "no"
    assert_type: "exact"
    severity: "high"
    tags:
      fstec: ["ИАФ.8"]
      cis: "5.2.4"
      goskz: "6.1.2"

  - id: base_listening_ports_allowlist
    name: "Слушающие TCP/UDP-порты соответствуют allowlist"
    module: "network"
    command: "ss -tulpen | awk '{print $1,$5}' | sed -n '2,$p' | sort -u"
    expect: "profiles/include/allowlist_ports.txt"
    assert_type: "set_allowlist"
    severity: "medium"
    tags:
      fstec: ["ЗИС.17"]
      cis: "3.1.1"
      goskz: "6.2.2"

  # ─────────────── Ядро и системные параметры ───────────────
  - id: base_sysctl_dmesg_restrict
    name: "kernel.dmesg_restrict=1"
    module: "system"
    command: "sysctl -n kernel.dmesg_restrict 2>/dev/null || echo 0"
    expect: "^1$"
    assert_type: "regexp"
    severity: "high"
    tags:
      fstec: ["ЗИС.10"]
      cis: "1.5.2"
      goskz: "8.1.2"

  - id: base_sysctl_unprivileged_bpf
    name: "kernel.unprivileged_bpf_disabled=1"
    module: "system"
    command: "sysctl -n kernel.unprivileged_bpf_disabled 2>/dev/null || echo 0"
    expect: "^1$"
    assert_type: "regexp"
    severity: "high"
    tags:
      fstec: ["ЗИС.10"]
      cis: "1.5.1"
      goskz: "8.1.2"

  - id: base_sysctl_kptr_restrict
    name: "kernel.kptr_restrict=2"
    module: "system"
    command: "sysctl -n kernel.kptr_restrict 2>/dev/null || echo 0"
    expect: "^2$"
    assert_type: "regexp"
    severity: "medium"
    tags:
      fstec: ["ЗИС.10"]
      cis: "1.5.3"
      goskz: "8.1.2"

  - id: base_sysctl_bpf_jit_harden
    name: "net.core.bpf_jit_harden=2"
    module: "system"
    command: "sysctl -n net.core.bpf_jit_harden 2>/dev/null || echo 0"
    expect: "^2$"
    assert_type: "regexp"
    severity: "medium"
    tags:
      fstec: ["ЗИС.10"]
      cis: "1.5.1"
      goskz: "8.1.2"

  - id: base_sysctl_perf_event_paranoid
    name: "kernel.perf_event_paranoid ≥ 3"
    module: "system"
    command: "sysctl -n kernel.perf_event_paranoid 2>/dev/null || echo 0"
    expect: "^[3-9]$"
    assert_type: "regexp"
    severity: "medium"
    tags:
      fstec: ["ЗИС.10"]
      cis: "1.1.1"
      goskz: "8.1.2"

  - id: base_sysctl_kexec_disabled
    name: "kernel.kexec_load_disabled=1"
    module: "system"
    command: "sysctl -n kernel.kexec_load_disabled 2>/dev/null || echo 0"
    expect: "^1$"
    assert_type: "regexp"
    severity: "high"
    tags:
      fstec: ["ЗИС.10"]
      cis: "1.5.4"
      goskz: "8.1.2"

  - id: base_sysctl_userfaultfd_disabled
    name: "vm.unprivileged_userfaultfd=0"
    module: "system"
    command: "sysctl -n vm.unprivileged_userfaultfd 2>/dev/null || echo 1"
    expect: "^0$"
    assert_type: "regexp"
    severity: "medium"
    tags:
      fstec: ["ЗИС.10"]
      cis: "1.5.2"
      goskz: "8.1.2"

  - id: base_sysctl_tty_ldisc_autoload
    name: "dev.tty.ldisc_autoload=0"
    module: "system"
    command: "sysctl -n dev.tty.ldisc_autoload 2>/dev/null || echo 1"
    expect: "^0$"
    assert_type: "regexp"
    severity: "medium"
    tags:
      fstec: ["ЗИС.10"]
      cis: "1.5.2"
      goskz: "8.1.2"

  - id: base_sysctl_mmap_min_addr
    name: "vm.mmap_min_addr ≥ 65536"
    module: "system"
    command: "sysctl -n vm.mmap_min_addr 2>/dev/null || echo 0"
    expect: "^(65536|[1-9][0-9]{5,})$"
    assert_type: "regexp"
    severity: "medium"
    tags:
      fstec: ["ЗИС.10"]
      cis: "1.5.3"
      goskz: "8.1.2"

  - id: base_sysctl_randomize_va_space
    name: "kernel.randomize_va_space=2"
    module: "system"
    command: "sysctl -n kernel.randomize_va_space 2>/dev/null || echo 0"
    expect: "^2$"
    assert_type: "regexp"
    severity: "high"
    tags:
      fstec: ["ЗИС.10"]
      cis: "1.5.3"
      goskz: "8.1.2"

  - id: base_sysctl_ptrace_scope
    name: "kernel.yama.ptrace_scope=3"
    module: "system"
    command: "sysctl -n kernel.yama.ptrace_scope 2>/dev/null || echo 0"
    expect: "^3$"
    assert_type: "regexp"
    severity: "high"
    tags:
      fstec: ["ЗИС.10"]
      cis: "1.5.3"
      goskz: "8.1.2"

  - id: base_sysctl_protected_symlinks
    name: "fs.protected_symlinks=1"
    module: "system"
    command: "sysctl -n fs.protected_symlinks 2>/dev/null || echo 0"
    expect: "^1$"
    assert_type: "regexp"
    severity: "medium"
    tags:
      fstec: ["ЗИС.7"]
      cis: "1.5.3"
      goskz: "8.2.1"

  - id: base_sysctl_protected_hardlinks
    name: "fs.protected_hardlinks=1"
    module: "system"
    command: "sysctl -n fs.protected_hardlinks 2>/dev/null || echo 0"
    expect: "^1$"
    assert_type: "regexp"
    severity: "medium"
    tags:
      fstec: ["ЗИС.7"]
      cis: "1.5.3"
      goskz: "8.2.1"

  - id: base_sysctl_protected_fifos
    name: "fs.protected_fifos=2"
    module: "system"
    command: "sysctl -n fs.protected_fifos 2>/dev/null || echo 0"
    expect: "^2$"
    assert_type: "regexp"
    severity: "medium"
    tags:
      fstec: ["ЗИС.7"]
      cis: "1.5.3"
      goskz: "8.2.1"

  - id: base_sysctl_protected_regular
    name: "fs.protected_regular=2"
    module: "system"
    command: "sysctl -n fs.protected_regular 2>/dev/null || echo 0"
    expect: "^2$"
    assert_type: "regexp"
    severity: "medium"
    tags:
      fstec: ["ЗИС.7"]
      cis: "1.5.3"
      goskz: "8.2.1"

  - id: base_sysctl_suid_dumpable
    name: "fs.suid_dumpable=0"
    module: "system"
    command: "sysctl -n fs.suid_dumpable 2>/dev/null || echo 1"
    expect: "^0$"
    assert_type: "regexp"
    severity: "high"
    tags:
      fstec: ["ЗИС.7"]
      cis: "1.5.3"
      goskz: "8.2.1"

  - id: base_sysctl_tcp_syncookies
    name: "net.ipv4.tcp_syncookies=1"
    module: "system"
    command: "sysctl -n net.ipv4.tcp_syncookies 2>/dev/null || echo 0"
    expect: "^1$"
    assert_type: "regexp"
    severity: "medium"
    tags:
      fstec: ["ЗИС.11"]
      cis: "3.3.1"
      goskz: "6.3.1"

  - id: base_sysctl_disable_ipv6
    name: "net.ipv6.conf.all.disable_ipv6=1"
    module: "system"
    command: "sysctl -n net.ipv6.conf.all.disable_ipv6 2>/dev/null || echo 0"
    expect: "^1$"
    assert_type: "regexp"
    severity: "medium"
    tags:
      fstec: ["ЗИС.11"]
      cis: "3.6.6"
      goskz: "6.4.2"

  - id: base_sysctl_disable_ipv6_default
    name: "net.ipv6.conf.default.disable_ipv6=1"
    module: "system"
    command: "sysctl -n net.ipv6.conf.default.disable_ipv6 2>/dev/null || echo 0"
    expect: "^1$"
    assert_type: "regexp"
    severity: "medium"
    tags:
      fstec: ["ЗИС.11"]
      cis: "3.6.6"
      goskz: "6.4.2"

  - id: base_sysctl_disable_ipv6_lo
    name: "net.ipv6.conf.lo.disable_ipv6=1"
    module: "system"
    command: "sysctl -n net.ipv6.conf.lo.disable_ipv6 2>/dev/null || echo 0"
    expect: "^1$"
    assert_type: "regexp"
    severity: "medium"
    tags:
      fstec: ["ЗИС.11"]
      cis: "3.6.6"
      goskz: "6.4.2"

  - id: base_sysctl_modules_disabled
    name: "kernel.modules_disabled=1 после инициализации"
    module: "system"
    command: "sysctl -n kernel.modules_disabled 2>/dev/null || echo 0"
    expect: "^1$"
    assert_type: "regexp"
    severity: "medium"
    tags:
      fstec: ["ЗИС.10"]
      cis: "1.5.4"
      goskz: "8.1.2"

  - id: base_kernel_module_blacklist_fs
    name: "Запрещены опасные файловые системы (cramfs/freevxfs/squashfs/udf)"
    module: "system"
    command: "grep -R --no-color -h 'blacklist ' /etc/modprobe.d 2>/dev/null | grep -E '(cramfs|freevxfs|squashfs|udf)' || true"
    expect: "blacklist"
    assert_type: "contains"
    severity: "medium"
    tags:
      fstec: ["ЗИС.10"]
      cis: "1.1.1"
      goskz: "8.1.3"

  - id: base_kernel_module_blacklist_peripherals
    name: "Запрещены Wi-Fi/Bluetooth/камера при политике"
    module: "system"
    command: "grep -R --no-color -h 'blacklist ' /etc/modprobe.d 2>/dev/null | grep -E '(ath9k|iwlwifi|btusb|uvcvideo|snd_hda_intel)' || true"
    expect: "blacklist"
    assert_type: "contains"
    severity: "low"
    tags:
      fstec: ["ЗИС.10"]
      cis: "1.1.1"
      goskz: "8.1.3"

  - id: base_cmdline_fstec_hardening
    name: "Командная строка ядра: включены параметры защиты"
    module: "system"
    command: "cat /proc/cmdline"
    expect: "(?s)(?=.*\\binit_on_alloc=1\\b)(?=.*\\bslab_nomerge\\b)(?=.*\\biommu=force\\b)(?=.*\\biommu\\.strict=1\\b)(?=.*\\biommu\\.passthrough=0\\b)(?=.*\\brandomize_kstack_offset=1\\b)(?=.*\\bmitigations=auto,nosmt\\b)(?=.*\\bvsyscall=none\\b)(?=.*\\bdebugfs=(?:no-mount|off)\\b)(?=.*\\btsx=off\\b)"
    assert_type: "regexp"
    severity: "high"
    tags:
      fstec: ["ЗИС.10"]
      cis: "1.5.3"
      goskz: "8.1.1"

  - id: base_cmdline_no_selinux0
    name: "Командная строка ядра: нет selinux=0"
    module: "system"
    command: "cat /proc/cmdline"
    expect: "selinux=0"
    assert_type: "not_contains"
    severity: "medium"
    tags:
      fstec: ["ЗИС.1"]
      cis: "1.6.1"
      goskz: "8.1.1"

  - id: base_cmdline_no_apparmor0
    name: "Командная строка ядра: нет apparmor=0"
    module: "system"
    command: "cat /proc/cmdline"
    expect: "apparmor=0"
    assert_type: "not_contains"
    severity: "medium"
    tags:
      fstec: ["ЗИС.1"]
      cis: "1.6.2"
      goskz: "8.1.1"

  - id: base_cmdline_no_audit0
    name: "Командная строка ядра: нет audit=0"
    module: "system"
    command: "cat /proc/cmdline"
    expect: "audit=0"
    assert_type: "not_contains"
    severity: "medium"
    tags:
      fstec: ["ЗИС.6"]
      cis: "4.1.2"
      goskz: "7.4.2"

  - id: base_cmdline_no_init_shell
    name: "Командная строка ядра: нет init=/bin/bash"
    module: "system"
    command: "cat /proc/cmdline"
    expect: "init=/bin/bash"
    assert_type: "not_contains"
    severity: "high"
    tags:
      fstec: ["ЗИС.1"]
      cis: "1.4.1"
      goskz: "8.1.1"

  # ─────────────── Права файлов и точки монтирования ───────────────
  - id: base_system_account_files_modes
    name: "Права /etc/passwd,/etc/group,/etc/shadow соответствуют политике"
    module: "system"
    command: |
      stat -Lc '%n:%a' /etc/passwd /etc/group /etc/shadow 2>/dev/null
    expect: "(?s)(?=.*passwd:64[04])(?=.*group:64[04])(?=.*shadow:0?6(40|00))"
    assert_type: "regexp"
    severity: "high"
    tags:
      fstec: ["ЗИС.7"]
      cis: "6.1.2"
      goskz: "8.2.1"

  - id: base_suid_allowlist
    name: "SUID/SGID-бинарники соответствуют allowlist"
    module: "system"
    command: |
      find / -xdev '(' -perm -4000 -o -perm -2000 ')' -type f 2>/dev/null | sort
    expect: "profiles/include/allowlist_suid_sgid.txt"
    assert_type: "set_allowlist"
    severity: "medium"
    tags:
      fstec: ["ЗИС.7"]
      cis: "6.1.10"
      goskz: "8.2.1"

  - id: base_world_writable_dirs
    name: "Нет мировых каталогов без sticky"
    module: "system"
    command: "find / -xdev -type d -perm -0002 ! -perm -1000 2>/dev/null"
    expect: ""
    assert_type: "exact"
    severity: "high"
    tags:
      fstec: ["ЗИС.7"]
      cis: "6.1.12"
      goskz: "8.2.2"

  - id: base_cron_files_strict_perms
    name: "Cron-скрипты без group/world-write"
    module: "system"
    command: |
      find /etc/cron* -xtype f -exec stat -Lc '%a %n' {} + 2>/dev/null \
        | awk '$1 ~ /..[2-7]/ || $1 ~ /.[2-7]./'
    expect: ""
    assert_type: "exact"
    severity: "medium"
    tags:
      fstec: ["ЗИС.7"]
      cis: "6.1.11"
      goskz: "8.2.2"

  - id: base_home_directories_mode_700
    name: "Домашние каталоги пользователей имеют права 700"
    module: "system"
    command: |
      awk -F: '($3>=1000 && $1!="nfsnobody" && $7!="/usr/sbin/nologin" && $7!="/bin/false"){print $1":"$6}' /etc/passwd 2>/dev/null \
        | while IFS=: read user home; do
            [ -d "$home" ] || continue
            perm=$(stat -Lc %a "$home" 2>/dev/null || echo unknown)
            if [ "$perm" != "700" ]; then
              echo "$user:$perm:$home"
            fi
          done
    expect: ""
    assert_type: "exact"
    severity: "medium"
    tags:
      fstec: ["ЗИС.7"]
      cis: "6.2.6"
      goskz: "8.2.2"

  - id: base_home_shell_rc_permissions
    name: "История и shell-профили без world-read"
    module: "system"
    command: |
      awk -F: '($3>=1000 && $1!="nfsnobody"){print $6}' /etc/passwd 2>/dev/null \
        | while read home; do
            [ -d "$home" ] || continue
            find "$home" -maxdepth 1 -type f \
              \( -name '.bash_history' -o -name '.bashrc' -o -name '.profile' -o -name '.bash_login' -o -name '.bash_logout' -o -name '.zshrc' -o -name '.zprofile' -o -name '.zlogin' \) \
              -exec stat -Lc '%a %n' {} +
          done 2>/dev/null \
        | awk '$1 ~ /..[2-7]/ || $1 ~ /.[2-7]./'
    expect: ""
    assert_type: "exact"
    severity: "low"
    tags:
      fstec: ["ЗИС.7"]
      cis: "6.2.7"
      goskz: "8.2.3"

  - id: base_tmp_mount_options
    name: "/tmp смонтирован с nodev,nosuid,noexec"
    module: "system"
    command: "findmnt -no OPTIONS /tmp 2>/dev/null || echo none"
    expect: "(?=.*nodev)(?=.*nosuid)(?=.*noexec)"
    assert_type: "regexp"
    severity: "medium"
    tags:
      fstec: ["ЗИС.7"]
      cis: "1.1.2"
      goskz: "8.2.3"

  - id: base_vartmp_mount_options
    name: "/var/tmp смонтирован с nodev,nosuid,noexec"
    module: "system"
    command: "findmnt -no OPTIONS /var/tmp 2>/dev/null || echo none"
    expect: "(?=.*nodev)(?=.*nosuid)(?=.*noexec)"
    assert_type: "regexp"
    severity: "medium"
    tags:
      fstec: ["ЗИС.7"]
      cis: "1.1.3"
      goskz: "8.2.3"

  - id: base_varlog_mount_options
    name: "/var/log смонтирован с nodev,nosuid,noexec"
    module: "system"
    command: "findmnt -no OPTIONS /var/log 2>/dev/null || echo none"
    expect: "(?=.*nodev)(?=.*nosuid)(?=.*noexec)"
    assert_type: "regexp"
    severity: "medium"
    tags:
      fstec: ["ЗИС.7"]
      cis: "1.1.12"
      goskz: "8.2.3"

  - id: base_home_mount_options
    name: "/home смонтирован с nodev"
    module: "system"
    command: "findmnt -no OPTIONS /home 2>/dev/null || echo none"
    expect: "nodev"
    assert_type: "contains"
    severity: "low"
    tags:
      fstec: ["ЗИС.7"]
      cis: "1.1.5"
      goskz: "8.2.3"

  - id: base_devshm_mount_options
    name: "/dev/shm смонтирован с nodev,nosuid,noexec"
    module: "system"
    command: "findmnt -no OPTIONS /dev/shm 2>/dev/null || echo none"
    expect: "(?=.*nodev)(?=.*nosuid)(?=.*noexec)"
    assert_type: "regexp"
    severity: "medium"
    tags:
      fstec: ["ЗИС.7"]
      cis: "1.1.16"
      goskz: "8.2.3"

  - id: base_runshm_mount_options
    name: "/run/shm смонтирован с nodev,nosuid,noexec"
    module: "system"
    command: "findmnt -no OPTIONS /run/shm 2>/dev/null || echo none"
    expect: "(?=.*nodev)(?=.*nosuid)(?=.*noexec)"
    assert_type: "regexp"
    severity: "low"
    tags:
      fstec: ["ЗИС.7"]
      cis: "1.1.17"
      goskz: "8.2.3"

  - id: base_fstab_no_user_mounts
    name: "/etc/fstab: пользовательские монтирования отключены"
    module: "system"
    command: |
      awk 'BEGIN{IGNORECASE=1} /^[[:space:]]*#/ {next} NF < 4 {next} {
        split($4, opts, ",");
        for (i in opts) {
          o=tolower(opts[i]);
          if (o=="user" || o=="users" || o=="owner") {
            print $1"\t"$2"\t"opts[i]
          }
        }
      }' /etc/fstab 2>/dev/null
    expect: "profiles/include/allowlist_fstab_user_mounts.txt"
    assert_type: "set_allowlist"
    severity: "medium"
    tags:
      fstec: ["ЗИС.7"]
      cis: "1.1.18"
      goskz: "8.2.3"

  # ─────────────── Мониторинг и журналирование ───────────────
  - id: base_journald_persistent
    name: "journald: Storage=persistent"
    module: "logging"
    command: |
      systemd-analyze cat-config systemd/journald.conf 2>/dev/null \
        | sed -E 's/#.*$//' \
        | awk -F= '/^Storage=/{gsub(/[[:space:]]+/,"",$0); print $1"="$2}' \
        | tail -n1
    expect: "Storage=persistent"
    assert_type: "exact"
    severity: "medium"
    tags:
      fstec: ["АНЗ.5"]
      cis: "4.2.2"
      goskz: "7.1.4"

  - id: base_journald_ratelimit
    name: "journald: RateLimitInterval/Burst заданы"
    module: "logging"
    command: |
      systemd-analyze cat-config systemd/journald.conf 2>/dev/null \
        | sed -E 's/#.*$//' \
        | awk -F= '/^RateLimit(Burst|Interval)=/{gsub(/[[:space:]]+/,"",$0); print $1"="$2}' \
        | sort -u
    expect: "RateLimitInterval="
    assert_type: "contains"
    severity: "medium"
    tags:
      fstec: ["АНЗ.5"]
      cis: "4.2.2"
      goskz: "7.1.4"

  - id: base_journald_ratelimit_burst
    name: "journald: RateLimitBurst определён"
    module: "logging"
    command: |
      systemd-analyze cat-config systemd/journald.conf 2>/dev/null \
        | sed -E 's/#.*$//' \
        | awk -F= '/^RateLimitBurst=/{gsub(/[[:space:]]+/,"",$0); print $1"="$2}' \
        | tail -n1
    expect: "RateLimitBurst="
    assert_type: "contains"
    severity: "medium"
    tags:
      fstec: ["АНЗ.5"]
      cis: "4.2.2"
      goskz: "7.1.4"

  - id: base_journald_forward_syslog
    name: "journald: ForwardToSyslog включён"
    module: "logging"
    command: |
      systemd-analyze cat-config systemd/journald.conf 2>/dev/null \
        | sed -E 's/#.*$//' \
        | awk -F= '/^ForwardToSyslog=/{gsub(/[[:space:]]+/,"",$0); print $1"="$2}' \
        | tail -n1
    expect: "ForwardToSyslog=yes"
    assert_type: "exact"
    severity: "low"
    tags:
      fstec: ["АНЗ.5"]
      cis: "4.2.1"
      goskz: "7.1.2"

  - id: base_journald_maxuse
    name: "journald: ограничение размера журналов настроено"
    module: "logging"
    command: |
      systemd-analyze cat-config systemd/journald.conf 2>/dev/null \
        | sed -E 's/#.*$//' \
        | awk -F= '/^SystemMaxUse=/{gsub(/[[:space:]]+/,"",$0); print $1"="$2}' \
        | tail -n1

    expect: "SystemMaxUse=([1-9][0-9]*)([KMGTP]B?|%)$"
    assert_type: "regexp"
    severity: "medium"
    tags:
      fstec: ["АНЗ.5"]
      cis: "4.2.2"
      goskz: "7.1.4"

  - id: base_journald_compress
    name: "journald: компрессия включена"
    module: "logging"
    command: |
      systemd-analyze cat-config systemd/journald.conf 2>/dev/null \
        | sed -E 's/#.*$//' \
        | awk -F= '/^Compress=/{gsub(/[[:space:]]+/,"",$0); print $1"="$2}' \
        | tail -n1
    expect: "Compress=yes"
    assert_type: "exact"
    severity: "low"
    tags:
      fstec: ["АНЗ.5"]
      cis: "4.2.2"
      goskz: "7.1.4"

  - id: base_logrotate_conf
    name: "logrotate: политики ротации ≤ 7 дней"
    module: "logging"
    command: "grep -RhsE '^[[:space:]]*(daily|weekly)' /etc/logrotate.d/ /etc/logrotate.conf 2>/dev/null | sed -E 's/^[[:space:]]+//' | head -n1"
    expect: "^(daily|weekly)$"
    assert_type: "regexp"
    severity: "low"
    tags:
      fstec: ["АНЗ.3"]
      cis: "4.3"
      goskz: "7.2.2"

  # ─────────────── Репозитории и обновления ───────────────
  - id: base_repo_gpgcheck_enabled
    name: "Репозитории RPM: gpgcheck не отключён"
    module: "packages"
    command: |
      if command -v rpm >/dev/null 2>&1; then
        grep -R "gpgcheck=0" /etc/yum.repos.d /etc/dnf/dnf.conf 2>/dev/null
      else
        echo
      fi
    expect: ""
    assert_type: "exact"
    severity: "medium"
    tags:
      fstec: ["ЗИС.13"]
      cis: "1.2.3"
      goskz: "9.1.1"

  - id: base_repo_apt_signed_by
    name: "APT: все источники подписаны"
    module: "packages"
    command: |
      if command -v apt-get >/dev/null 2>&1; then
        grep -R "^deb" /etc/apt/sources.list /etc/apt/sources.list.d 2>/dev/null \
          | sed -E 's/#.*$//' \
          | awk 'NF && $1=="deb" {print}' \
          | awk 'BEGIN{bad=0} {if(tolower($0) ~ /signed-by=/){next} else {print; bad=1}} END{if(bad==0) print "ok"}'
      else
        echo skipped
      fi
    expect: "^(ok|skipped)$"
    assert_type: "regexp"
    severity: "medium"
    tags:
      fstec: ["ЗИС.13"]
      cis: "1.2.1"
      goskz: "9.1.1"

  - id: base_repo_no_trusted_yes
    name: "APT: отсутствуют репозитории trusted=yes"
    module: "packages"
    command: |
      if command -v apt-get >/dev/null 2>&1; then
        grep -R "trusted=yes" /etc/apt/sources.list /etc/apt/sources.list.d 2>/dev/null
      else
        echo
      fi
    expect: ""
    assert_type: "exact"
    severity: "medium"
    tags:
      fstec: ["ЗИС.13"]
      cis: "1.2.3"
      goskz: "9.1.1"

  - id: base_kernel_min_version
    name: "Ядро: версия не ниже 4.18"
    module: "packages"
    command: |
      current=$(uname -r 2>/dev/null | cut -d- -f1)
      min="4.18"
      if [ -z "$current" ]; then
        echo unknown
      else
        first=$(printf '%s\n%s\n' "$min" "$current" | sort -V | head -n1)
        if [ "$first" = "$min" ]; then
          echo ok
        else
          echo "$current"
        fi
      fi
    expect: "^ok$"
    assert_type: "regexp"
    severity: "medium"
    tags:
      fstec: ["ЗИС.12"]
      cis: "1.5"
      goskz: "9.1.2"

  - id: base_pkg_sudo_min_version
    name: "sudo: версия не ниже 1.9.5"
    module: "packages"
    command: |
      min="1.9.5"
      if command -v rpm >/dev/null 2>&1; then
        current=$(rpm -q --qf '%{VERSION}' sudo 2>/dev/null || echo)
      elif command -v dpkg-query >/dev/null 2>&1; then
        current=$(dpkg-query -W -f='${Version}' sudo 2>/dev/null | cut -d- -f1)
      else
        echo skipped
        exit 0
      fi
      if [ -z "$current" ]; then
        echo missing
      else
        first=$(printf '%s\n%s\n' "$min" "$current" | sort -V | head -n1)
        if [ "$first" = "$min" ]; then
          echo ok
        else
          echo "$current"
        fi
      fi
    expect: "^(ok|skipped)$"
    assert_type: "regexp"
    severity: "medium"
    tags:
      fstec: ["ЗИС.12"]
      cis: "1.5"
      goskz: "9.1.2"

  - id: base_pkg_openssh_min_version
    name: "OpenSSH: версия сервера не ниже 8.0"
    module: "packages"
    command: |
      min="8.0"
      if command -v rpm >/dev/null 2>&1; then
        current=$(rpm -q --qf '%{VERSION}' openssh-server 2>/dev/null || echo)
      elif command -v dpkg-query >/dev/null 2>&1; then
        current=$(dpkg-query -W -f='${Version}' openssh-server 2>/dev/null | cut -d- -f1)
      else
        echo skipped
        exit 0
      fi
      if [ -z "$current" ]; then
        echo missing
      else
        first=$(printf '%s\n%s\n' "$min" "$current" | sort -V | head -n1)
        if [ "$first" = "$min" ]; then
          echo ok
        else
          echo "$current"
        fi
      fi
    expect: "^(ok|skipped)$"
    assert_type: "regexp"
    severity: "medium"
    tags:
      fstec: ["ЗИС.12"]
      cis: "1.5"
      goskz: "9.1.2"

  - id: base_pkg_integrity_core
    name: "Целостность критичных пакетов проверена"
    module: "packages"
    command: |
      if command -v rpm >/dev/null 2>&1; then
        output=$(rpm -Va shadow-utils passwd sudo 2>/dev/null)
      elif command -v dpkg-query >/dev/null 2>&1; then
        output=$(dpkg -V passwd sudo login 2>/dev/null)
      else
        echo skipped
        exit 0
      fi
      if [ -z "$output" ]; then
        echo ok
      else
        echo "$output"
      fi
    expect: "^(ok|skipped)$"
    assert_type: "regexp"
    severity: "medium"
    tags:
      fstec: ["ЗИС.13"]
      cis: "1.5.2"
      goskz: "9.1.3"

  - id: base_ipv6_ra_guard
    name: "IPv6: запрещены несанкционированные router advertisement"
    module: "network"
    command: |
      if command -v nft >/dev/null 2>&1; then
        if nft list ruleset 2>/dev/null | grep -Ei 'icmpv6 type (134|135).*drop' >/dev/null; then
          echo protected
        else
          echo missing
        fi
      elif command -v ip6tables >/dev/null 2>&1; then
        if ip6tables -S 2>/dev/null | grep -Ei 'icmpv6.*(router-advertisement|ra).*(DROP|REJECT)' >/dev/null; then
          echo protected
        else
          echo missing
        fi
      else
        echo skipped
      fi
    expect: "^(protected|skipped)$"
    assert_type: "regexp"
    severity: "medium"
    tags:
      fstec: ["ЗИС.17"]
      cis: "3.6.6"
      goskz: "6.4.2"

  - id: base_ipv6_firewall_default_deny
    name: "IPv6: политика DROP по умолчанию"
    module: "network"
    command: |
      if command -v nft >/dev/null 2>&1; then
        nft list ruleset 2>/dev/null | grep -E 'family (inet|ip6).*hook (input|forward|output).*policy drop' | sort -u | wc -l
      elif command -v ip6tables >/dev/null 2>&1; then
        ip6tables -S | grep -E '^-P (INPUT|FORWARD|OUTPUT) DROP' | wc -l
      else
        echo 0
      fi
    expect: "^([3-9]|[1-9][0-9]+)$"
    assert_type: "regexp"
    severity: "medium"
    tags:
      fstec: ["ЗИС.17"]
      cis: "3.6.6"
      goskz: "6.4.2"

  - id: base_fail2ban_active
    name: "fail2ban: служба активна при паролях"
    module: "network"
    command: |
      if systemctl list-unit-files fail2ban.service >/dev/null 2>&1; then
        systemctl is-active fail2ban 2>/dev/null || echo inactive
      else
        echo skipped
      fi
    expect: "^(active|skipped)$"
    assert_type: "regexp"
    severity: "low"
    tags:
      fstec: ["ИАФ.9"]
      cis: "5.3.3"
      goskz: "6.1.3"

  - id: base_fail2ban_jails
    name: "fail2ban: хотя бы одна jail активна"
    module: "network"
    command: |
      if systemctl is-active --quiet fail2ban 2>/dev/null; then
        fail2ban-client status 2>/dev/null | awk '/Jail list:/ {count=0; for (i=4;i<=NF;i++){gsub(",","",$i); if($i!=""){count++}}; print count}'
      else
        echo skipped
      fi
    expect: "^(skipped|[1-9][0-9]*)$"
    assert_type: "regexp"
    severity: "low"
    tags:
      fstec: ["ИАФ.9"]
      cis: "5.3.3"
      goskz: "6.1.3"

  - id: base_services_redundant_disabled
    name: "Лишние службы (CUPS/Avahi/SSH-agent) отключены"
    module: "network"
    command: |
      for svc in cups.service avahi-daemon.service bluetooth.service ssh-agent.socket; do
        if systemctl list-unit-files "$svc" >/dev/null 2>&1; then
          state=$(systemctl is-enabled "$svc" 2>/dev/null || echo unknown)
          if ! echo "$state" | grep -Eq '^(disabled|masked)$'; then
            echo "$svc $state"
          fi
        fi
      done
    expect: ""
    assert_type: "exact"
    severity: "medium"
    tags:
      fstec: ["ЗИС.17"]
      cis: "2.2"
      goskz: "6.2.4"

  # ─────────────── Политики рабочих станций ───────────────
  - id: base_workstation_no_autologin
    name: "Графические менеджеры: автологон отключён"
    module: "workstation"
    command: |
      found=0
      for cfg in /etc/gdm/custom.conf /etc/gdm3/daemon.conf /etc/lightdm/lightdm.conf /etc/lightdm/lightdm.conf.d/*.conf /etc/sddm.conf /etc/sddm.conf.d/*.conf; do
        [ -f "$cfg" ] || continue
        if grep -Ei '^(AutomaticLogin|AutomaticLoginEnable|autologin-user)\s*(=|true)' "$cfg" 2>/dev/null; then
          echo "$cfg"
          found=1
        fi
      done
      if [ $found -eq 0 ]; then
        echo ok
      fi
    expect: "ok"
    assert_type: "exact"
    severity: "medium"
    tags:
      fstec: ["ИАФ.9"]
      cis: "1.8"
      goskz: "5.3.7"

  - id: base_workstation_hide_user_list
    name: "Графические менеджеры: список пользователей скрыт"
    module: "workstation"
    command: |
      python3 - <<'PY'
      from pathlib import Path

      def parse_conf(paths):
          values = {}
          for path in paths:
              p = Path(path)
              if not p.exists():
                  continue
              try:
                  with p.open("r", encoding="utf-8", errors="ignore") as fh:
                      for line in fh:
                          line = line.split("#", 1)[0].strip()
                          if not line or "=" not in line:
                              continue
                          key, val = line.split("=", 1)
                          key = key.strip().lower()
                          val = val.strip().lower()
                          values[key] = val
              except Exception:
                  continue
          return values

      gdm_files = [
          "/etc/gdm/custom.conf",
          "/etc/gdm3/daemon.conf",
      ]
      gdm_present = any(Path(p).exists() for p in gdm_files)
      gdm_values = parse_conf(gdm_files)
      lightdm_paths = ["/etc/lightdm/lightdm.conf"]
      lightdm_dir = Path("/etc/lightdm/lightdm.conf.d")
      if lightdm_dir.exists():
          lightdm_paths.extend(sorted(str(p) for p in lightdm_dir.glob("*.conf")))
      lightdm_present = any(Path(p).exists() for p in lightdm_paths)
      lightdm_values = parse_conf(lightdm_paths)

      issues = []

      if gdm_present:
          if gdm_values.get("automaticloginenable") not in {"false", "0", None}:
              issues.append("gdm:AutomaticLoginEnable")
          if gdm_values.get("timedloginenable") not in {"false", "0", None}:
              issues.append("gdm:TimedLoginEnable")
          if gdm_values.get("includeall") not in {"false", "0"}:
              issues.append("gdm:IncludeAll")

      if lightdm_present:
          if lightdm_values.get("greeter-hide-users") not in {"true", "1"}:
              issues.append("lightdm:greeter-hide-users")
          if lightdm_values.get("greeter-show-manual-login") not in {"true", "1"}:
              issues.append("lightdm:greeter-show-manual-login")

      if issues:
          print("\n".join(sorted(set(issues))))
      PY
    expect: ""
    assert_type: "exact"
    severity: "low"
    tags:
      fstec: ["ИАФ.9"]
      cis: "1.8"
      goskz: "5.3.7"

  - id: base_browser_policies_present
    name: "Политики браузеров заданы"
    module: "workstation"
    command: |
      status=ok
      if command -v firefox >/dev/null 2>&1; then
        if [ ! -f /etc/firefox/policies/policies.json ]; then
          status=firefox-missing
        fi
      fi
      if command -v chromium >/dev/null 2>&1 || command -v chromium-browser >/dev/null 2>&1 || command -v google-chrome >/dev/null 2>&1; then
        if ! find /etc/chromium/policies/managed /etc/chromium-browser/policies/managed /etc/opt/chrome/policies/managed -maxdepth 1 -name '*.json' 2>/dev/null | head -n1 >/dev/null; then
          status=chromium-missing
        fi
      fi
      echo "$status"
    expect: "^ok$"
    assert_type: "regexp"
    severity: "low"
    tags:
      fstec: ["ЗИС.19"]
      cis: "1.8.2"
      goskz: "5.4.2"

  # ─────────────── Контейнеры и виртуализация ───────────────
  - id: base_docker_no_tcp_listen
    name: "Docker: демон не слушает TCP-интерфейсы"
    module: "containers"
    command: |
      docker_args=$(ps -eo args | grep -E '\bdockerd\b' | grep -v grep)
      if [ -n "$docker_args" ]; then
        echo "$docker_args" | grep -E '(-H|--host)\s*tcp://' || echo ok
      else
        echo skipped
      fi
    expect: "^(ok|skipped)$"
    assert_type: "regexp"
    severity: "medium"
    tags:
      fstec: ["ЗИС.17"]
      cis: "5.29"
      goskz: "6.5.1"

  - id: base_docker_no_privileged_containers
    name: "Docker: нет привилегированных контейнеров"
    module: "containers"
    command: |
      if command -v docker >/dev/null 2>&1; then
        ids=$(docker ps -q 2>/dev/null)
        if [ -z "$ids" ]; then
          echo ok
        else
          info=$(docker inspect --format '{{.Name}} {{.HostConfig.Privileged}}' $ids 2>/dev/null)
          if echo "$info" | grep ' true' >/dev/null 2>&1; then
            echo "$info" | grep ' true'
          else
            echo ok
          fi
        fi
      else
        echo skipped
      fi
    expect: "^(ok|skipped)$"
    assert_type: "regexp"
    severity: "high"
    tags:
      fstec: ["ЗИС.17"]
      cis: "5.29"
      goskz: "6.5.1"

  - id: base_docker_no_extra_capabilities
    name: "Docker: контейнеры не добавляют лишние CapAdd"
    module: "containers"
    command: |
      if command -v docker >/dev/null 2>&1; then
        ids=$(docker ps -q 2>/dev/null)
        if [ -z "$ids" ]; then
          echo ok
        else
          info=$(docker inspect --format '{{.Name}} {{json .HostConfig.CapAdd}}' $ids 2>/dev/null)
          bad=$(echo "$info" | awk '$2!="null" && $2!="[]" {print $0}')
          if [ -n "$bad" ]; then
            echo "$bad"
          else
            echo ok
          fi
        fi
      else
        echo skipped
      fi
    expect: "^(ok|skipped)$"
    assert_type: "regexp"
    severity: "medium"
    tags:
      fstec: ["ЗИС.17"]
      cis: "5.29"
      goskz: "6.5.1"

  - id: base_docker_no_latest_images
    name: "Docker: не используются образы с тегом :latest"
    module: "containers"
    command: |
      if command -v docker >/dev/null 2>&1; then
        images=$(docker image ls --format '{{.Repository}}:{{.Tag}}' 2>/dev/null | grep -E ':latest$')
        if [ -n "$images" ]; then
          echo "$images"
        else
          echo ok
        fi
      else
        echo skipped
      fi
    expect: "^(ok|skipped)$"
    assert_type: "regexp"
    severity: "low"
    tags:
      fstec: ["ЗИС.17"]
      cis: "5.29"
      goskz: "6.5.1"

  - id: base_docker_iptables_enabled
    name: "Docker: не отключена интеграция с iptables"
    module: "containers"
    command: |
      python3 - <<'PY'
      import json
      from pathlib import Path

      path = Path('/etc/docker/daemon.json')
      if not path.exists():
          print('skipped')
      else:
          try:
              data = json.loads(path.read_text(encoding='utf-8'))
          except Exception:
              print('daemon.json:invalid')
          else:
              if data.get('iptables') is False:
                  print('iptables=false')
      PY
    expect: "^(|skipped)$"
    assert_type: "regexp"
    severity: "medium"
    tags:
      fstec: ["ЗИС.17"]
      cis: "5.29"
      goskz: "6.5.1"

  - id: base_podman_socket_disabled
    name: "Podman: socket не активен постоянно"
    module: "containers"
    command: |
      if systemctl list-unit-files podman.socket >/dev/null 2>&1; then
        systemctl is-enabled podman.socket 2>/dev/null || echo disabled
      else
        echo skipped
      fi
    expect: "^(disabled|masked|skipped)$"
    assert_type: "regexp"
    severity: "low"
    tags:
      fstec: ["ЗИС.17"]
      cis: "5.28"
      goskz: "6.5.1"

  - id: base_libvirt_audit
    name: "Libvirt: auditd контролирует каталоги VM"
    module: "virtualization"
    command: |
      if systemctl is-active --quiet libvirtd 2>/dev/null; then
        auditctl -l 2>/dev/null | grep -E -- '-w /var/lib/libvirt -p wa' || true
      else
        echo skipped
      fi
    expect: "-w /var/lib/libvirt -p wa"
    assert_type: "contains"
    severity: "medium"
    tags:
      fstec: ["ЗИС.6"]
      cis: "5.10"
      goskz: "7.4.3"
