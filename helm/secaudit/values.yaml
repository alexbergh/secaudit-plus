replicaCount: 1

image:
  repository: ghcr.io/alexbergh/secaudit-core
  pullPolicy: IfNotPresent
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: "8080"
  prometheus.io/path: "/metrics"

podSecurityContext:
  runAsNonRoot: false
  runAsUser: 0
  fsGroup: 0

securityContext:
  privileged: true
  capabilities:
    add:
      - SYS_ADMIN
      - NET_ADMIN
  readOnlyRootFilesystem: false

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: false
  className: "nginx"
  annotations: {}
  hosts:
    - host: secaudit.local
      paths:
        - path: /
          pathType: Prefix
  tls: []

resources:
  limits:
    cpu: 2000m
    memory: 1Gi
  requests:
    cpu: 500m
    memory: 512Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

persistence:
  enabled: true
  storageClass: ""
  accessMode: ReadWriteOnce
  size: 10Gi
  mountPath: /app/results

config:
  level: baseline
  workers: 4
  profiles:
    - profiles/base/linux.yml
  
  logLevel: INFO
  logFile: /app/logs/secaudit.log

hostPaths:
  enabled: true
  paths:
    - name: etc
      hostPath: /etc
      mountPath: /host/etc
      readOnly: true
    - name: var
      hostPath: /var
      mountPath: /host/var
      readOnly: true
    - name: sys
      hostPath: /sys
      mountPath: /host/sys
      readOnly: true
    - name: proc
      hostPath: /proc
      mountPath: /host/proc
      readOnly: true

cronjob:
  enabled: false
  schedule: "0 2 * * *"
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 1
  concurrencyPolicy: Forbid

monitoring:
  serviceMonitor:
    enabled: false
    interval: 30s
    scrapeTimeout: 10s
  
  prometheusRule:
    enabled: false
    rules: []
